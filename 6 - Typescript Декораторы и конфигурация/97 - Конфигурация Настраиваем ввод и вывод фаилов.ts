// Если мы пишем команду tsc index.ts где index.ts имя файла то к такой команде не будет применяться tsconfig.json.

// Массив файлов который необходимо включить в компиляцию пишется после "compilerOptions": {}. И Запускаем tsc для компиляции. Но это все не оч удобно. В реальной работе используется include.
//   {
//     "compilerOptions": {},
//     "files": [
//       "core.ts",
//       "sys.ts",
//       "types.ts",
//       "scanner.ts",
//       "parser.ts",
//       "utilities.ts",
//       "binder.ts",
//       "checker.ts",
//       "tsc.ts"
//     ]
//   }
// include Задает массив имен файлов или шаблонов для включения в программу. Эти имена файлов определяются относительно каталога, содержащего файл tsconfig.json.
//  {
//   "include": ["src/**/*", "tests/**/*"]
//  }
// Пример, где
//   "include": [
//     "index.ts", - базовый файл который будет идти в работу
//     "test/**/*" - тут папка test с возможностью еще каких то подпапок и оттуда будем брать все файлы. Если в конце просто звездочка то компилятор будет брать в работу файлы с расширением ts, tsx, dds файлы. Это не сборщик проекта а только ts компилятор.
// ]


// Эти настройки помогут для мигрирования из js проекта в ts проект. Если часть проекта переписана а часть нет но мы хотим проверить работоспособность.
// Настройка allowJs: true - если ее включить то мы можем использовать js файлы чтобы они были частью вашей программы.
// Настройка checkjs: true - если ее включить то будет дополнительная проверка js файлов чтобы там тоже не было ошибок.

// Опция exclude - исключает файлы только из списка включенных файлов в компиляцию. Если файлы которые попали в exclude они были импортированы в какие то другие файлы то вот эти исключенные файлы все равно попадут в конечную сборку на конечные файлы которые будут образовываться
// "exclude": ["test/test.ts"] - скажем что мы не хотим брать файл test.ts в папке test. Но если будет экпорт в файле test.ts и где то его импорт в другом то он все равно скомпилируется.

// Опция extends - она позволяет сказать данному конфигу что его настройки будут наследованы от другого конфига. Т.е. Перезаписаны и дополнены отсутствующими значениями. В практике встр редко.

// Опция "outDir": "./dist" - формирование папки dist в которой будут все скопилированные js файлы и сама структура папок тоже останется. Т.е. вся компиляция в папку dist.

// Команда tsc --watch она если мы что то будем добавлять в файлы сохранять то будет автоматическая компиляция. Запустить флаг --watch и наслаждаться процессом)))) 